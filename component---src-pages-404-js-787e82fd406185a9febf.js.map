{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/seo.js"],"names":["NotFoundPage","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","location","this","props","_components_seo__WEBPACK_IMPORTED_MODULE_3__","title","React","Component","SEO","_ref","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"uJAKMA,4FACJC,OAAA,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUC,KAAKC,MAAMF,UAC3BJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAKC,MAAM,mBACXR,EAAAC,EAAAC,cAAA,6CACAF,EAAAC,EAAAC,cAAA,oEANmBO,IAAMC,WAYlBZ,sHCZf,SAASa,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMC,EAAmBJ,EAAnBI,SAAUR,EAASI,EAATJ,MAChD,OACER,EAAAC,EAAAC,cAACe,EAAA,YAAD,CACEC,MAAOC,EACPpB,OAAQ,SAAAqB,GACN,IAAMC,EACJR,GAAeO,EAAKE,KAAKC,aAAaV,YACxC,OACEb,EAAAC,EAAAC,cAACsB,EAAAvB,EAAD,CACEwB,eAAgB,CACdX,QAEFN,MAAOA,EACPkB,cAAa,QAAUN,EAAKE,KAAKC,aAAaf,MAC9CO,KAAM,CACJ,CACEY,KAAI,cACJC,QAASP,GAEX,CACEQ,SAAQ,WACRD,QAASpB,GAEX,CACEqB,SAAQ,iBACRD,QAASP,GAEX,CACEQ,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAI,gBACJC,QAASpB,GAEX,CACEmB,KAAI,sBACJC,QAASP,IAGVU,OACCf,EAASgB,OAAS,EACd,CACEL,KAAI,WACJC,QAASZ,EAASiB,KAAT,OAEX,IAELF,OAAOhB,MAtDlBK,KAAAc,IA8DJvB,EAAIwB,aAAe,CACjBrB,KAAI,KACJC,KAAM,GACNC,SAAU,IAGZL,EAAIyB,UAAY,CACdvB,YAAawB,IAAUC,OACvBxB,KAAMuB,IAAUC,OAChBvB,KAAMsB,IAAUE,MAChBvB,SAAUqB,IAAUG,QAAQH,IAAUC,QACtC9B,MAAO6B,IAAUC,OAAOG,YAGX9B,MAEf,IAAMQ,EAAY","file":"component---src-pages-404-js-787e82fd406185a9febf.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass NotFoundPage extends React.Component {\n  render() {\n    return (\n      <Layout location={this.props.location}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Whoops, this page doesn't exist</h1>\n        <p>Looks like you've stumbled onto non-existant page.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}