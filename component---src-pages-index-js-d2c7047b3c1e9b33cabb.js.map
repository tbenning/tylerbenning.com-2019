{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","React","Component","pageQuery","SEO","_ref","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"wMAKMA,4FACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MAC3BN,EAAKO,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUZ,KAAKC,MAAMW,SAAUP,MAAOH,GAC5CM,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACER,MAAM,mCACNS,SAAU,uFAWZN,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,wTAOAF,EAAAC,EAAAC,cAAA,+BACAF,EAAAC,EAAAC,cAAA,gZAMoD,IAClDF,EAAAC,EAAAC,cAACK,EAAA,KAAD,CAAMC,GAAG,4CAAT,UAEFR,EAAAC,EAAAC,cAAA,wCACAF,EAAAC,EAAAC,cAAA,2OAzCgBO,IAAMC,WAoDfrB,YAER,IAAMsB,EAAS,uHCtDtB,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMV,EAAmBO,EAAnBP,SAAUT,EAASgB,EAAThB,MAChD,OACEG,EAAAC,EAAAC,cAACe,EAAA,YAAD,CACEC,MAAOC,EACP7B,OAAQ,SAAAC,GACN,IAAM6B,EACJN,GAAevB,EAAKI,KAAKC,aAAakB,YACxC,OACEd,EAAAC,EAAAC,cAACmB,EAAApB,EAAD,CACEqB,eAAgB,CACdP,QAEFlB,MAAOA,EACP0B,cAAa,QAAUhC,EAAKI,KAAKC,aAAaC,MAC9CmB,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAS5B,GAEX,CACE6B,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASlC,EAAKI,KAAKC,aAAa+B,QAElC,CACEH,KAAI,gBACJC,QAAS5B,GAEX,CACE2B,KAAI,sBACJC,QAASL,IAGVQ,OACCtB,EAASuB,OAAS,EACd,CACEL,KAAI,WACJC,QAASnB,EAASwB,KAAT,OAEX,IAELF,OAAOZ,MAtDlBzB,KAAAwC,IA8DJnB,EAAIoB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNV,SAAU,IAGZM,EAAIqB,UAAY,CACdnB,YAAaoB,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,MAChB9B,SAAU4B,IAAUG,QAAQH,IAAUC,QACtCtC,MAAOqC,IAAUC,OAAOG,YAGX1B,MAEf,IAAMO,EAAY","file":"component---src-pages-index-js-d2c7047b3c1e9b33cabb.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Design Portfolio - Tyler Benning\"\n          keywords={[\n            `ux design`,\n            `ui design`,\n            `portfolio`,\n            `product design`,\n            `gatsby`,\n            `javascript`,\n            `react`,\n          ]}\n        />\n        {/* <Bio /> */}\n        <h1>About</h1>\n        <h3>What I Do at Work</h3>\n        <p>\n          Product design is what I do at work everyday. Sometimes that means\n          fixing lots of small obvious problems inside a big app. Other times it\n          means starting big ambitious projects from scratch. On some occasions,\n          it means talking through problems and designing your way out of\n          designing anything at all!\n        </p>\n        <h3>What I'm Learning</h3>\n        <p>\n          At this moment, I'm fascinated with the intersection between design\n          and front-end development. Everyone's talking about how Javascript's\n          eating the world, and all I hear people talk about is React, React,\n          React (...and Vue). So, to level up my JS and React skills, I built\n          this site using Gatsby, a static site builder that uses React and\n          GraphQL. You can read more about how I built this{' '}\n          <Link to=\"/personal-projects/tylerbenning-website/\">here.</Link>\n        </p>\n        <h3>What This Site's All About</h3>\n        <p>\n          For me, stories are the heart of design, and are what connect people\n          towards common goals, ideas, and motivations. I built this site so I'd\n          have a place to write about and share some of my own stories and\n          experiences.\n        </p>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            dateRange\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}