{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","React","Component","pageQuery","SEO","_ref","description","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"wMAKMA,4FACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MAC3BN,EAAKO,kBAAkBC,MAErC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUZ,KAAKC,MAAMW,SAAUP,MAAOH,GAC5CM,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACER,MAAM,mCACNS,SAAU,uFAWZN,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,gMAKAF,EAAAC,EAAAC,cAAA,6RAMAF,EAAAC,EAAAC,cAAA,gMAjCgBK,IAAMC,WAyDfnB,YAER,IAAMoB,EAAS,uHC3DtB,SAASC,EAATC,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMR,EAAmBK,EAAnBL,SAAUT,EAASc,EAATd,MAChD,OACEG,EAAAC,EAAAC,cAACa,EAAA,YAAD,CACEC,MAAOC,EACP3B,OAAQ,SAAAC,GACN,IAAM2B,EACJN,GAAerB,EAAKI,KAAKC,aAAagB,YACxC,OACEZ,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,eAAgB,CACdP,QAEFhB,MAAOA,EACPwB,cAAa,QAAU9B,EAAKI,KAAKC,aAAaC,MAC9CiB,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAAS1B,GAEX,CACE2B,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAShC,EAAKI,KAAKC,aAAa6B,QAElC,CACEH,KAAI,gBACJC,QAAS1B,GAEX,CACEyB,KAAI,sBACJC,QAASL,IAGVQ,OACCpB,EAASqB,OAAS,EACd,CACEL,KAAI,WACJC,QAASjB,EAASsB,KAAT,OAEX,IAELF,OAAOZ,MAtDlBvB,KAAAsC,IA8DJnB,EAAIoB,aAAe,CACjBjB,KAAI,KACJC,KAAM,GACNR,SAAU,IAGZI,EAAIqB,UAAY,CACdnB,YAAaoB,IAAUC,OACvBpB,KAAMmB,IAAUC,OAChBnB,KAAMkB,IAAUE,MAChB5B,SAAU0B,IAAUG,QAAQH,IAAUC,QACtCpC,MAAOmC,IAAUC,OAAOG,YAGX1B,MAEf,IAAMO,EAAY","file":"component---src-pages-index-js-cbc3120b2e851a6634ba.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"Design Portfolio - Tyler Benning\"\n          keywords={[\n            `ux design`,\n            `ui design`,\n            `portfolio`,\n            `product design`,\n            `gatsby`,\n            `javascript`,\n            `react`,\n          ]}\n        />\n        {/* <Bio /> */}\n        <h1>About Me</h1>\n        <p>\n          Product design is what I do at work everyday. Sometimes that means\n          fixing lots of small things inside a big app. Other times it means\n          starting big ambitious projects from scratch.\n        </p>\n        <p>\n          I wanted to start my own project from scratch to practice doing Front\n          End development. Everyone's talking about how Javascript's eating the\n          world, so I built this site using Gatsby, a static site builder that\n          uses React and GraphQL. You can read more about this site here.\n        </p>\n        <p>\n          For me, stories are the heart of design, and are what help get people\n          on the same page. I built this site so I'd have a place to write about\n          and share some of my own stories.\n        </p>\n\n        {/* this is the guts of the blog post items here, this should only show up on the projects page, but we should pass this data into sidebar */}\n        {/* {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3>\n                <Link to={node.fields.slug}>{title}</Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n            </div>\n          )\n        })} */}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            dateRange\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}