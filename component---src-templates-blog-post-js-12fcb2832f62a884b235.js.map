{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./src/components/seo.js"],"names":["WriteupDiv","styled","div","withConfig","displayName","componentId","colors","ink80","NextLink","Link","ink90","ink20","ink70","purple90","ink10","BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","description","excerpt","dateRange","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","marginTop","marginBottom","width","to","fields","slug","rel","textAlign","React","Component","pageQuery","SEO","_ref","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired"],"mappings":"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","file":"component---src-templates-blog-post-js-12fcb2832f62a884b235.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport SEO from '../components/seo'\nimport styled from 'styled-components'\nimport { colors } from '../utils/globalStyles'\n\nconst WriteupDiv = styled.div`\n  li {\n    font-family: 'PT Serif', georgia, serif;\n    font-size: 18px;\n    color: ${colors.ink80};\n  }\n`\n\nconst NextLink = styled(Link)`\n  text-decoration: none;\n  color: ${colors.ink90};\n  font-size: 20px;\n  transition: 0.25s;\n  display: block;\n  border: 2px solid ${colors.ink20};\n  padding: 16px;\n  border-radius: 4px;\n  span {\n    font-size: 14px;\n    line-height: 1.2;\n    display: block;\n    font-weight: 600;\n    color: ${colors.ink70};\n  }\n  &:hover {\n    color: ${colors.purple90};\n    background: ${colors.ink10};\n    border: 2px solid rgba(0, 0, 0, 0);\n    box-shadow: 0 10px 18px -5px rgba(0, 0, 0, 0.1),\n      0 1px 2px 0 rgba(0, 0, 0, 0.04);\n    transform: translateY(-2px);\n  }\n`\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <h1>{post.frontmatter.title}</h1>\n        <p>{post.frontmatter.dateRange}</p>\n        <WriteupDiv dangerouslySetInnerHTML={{ __html: post.html }} />\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n            marginTop: `40px`,\n            marginBottom: `-32px`,\n          }}\n        >\n          <li\n            style={{\n              width: `48%`,\n            }}\n          >\n            {next && (\n              <NextLink to={next.fields.slug} rel=\"next\">\n                <span>← Previous</span>\n                {next.frontmatter.title}\n              </NextLink>\n            )}\n          </li>\n          <li\n            style={{\n              textAlign: `right`,\n              width: `48%`,\n            }}\n          >\n            {previous && (\n              <NextLink to={previous.fields.slug} rel=\"prev\">\n                <span>Next →</span> {previous.frontmatter.title}\n              </NextLink>\n            )}\n          </li>\n        </ul>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        dateRange\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}